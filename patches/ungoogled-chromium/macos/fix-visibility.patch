# Fix compiling on macOS

--- a/tools/gn/src/gn/visibility.cc
+++ b/tools/gn/src/gn/visibility.cc
@@ -80,7 +80,7 @@ std::string Visibility::Describe(int ind
   return result;
 }
 
-std::unique_ptr<base::Value> Visibility::AsValue() const {
+std::unique_ptr<base::ListValue> Visibility::AsValue() const {
   auto res = std::make_unique<base::ListValue>();
   for (const auto& pattern : patterns_)
     res->AppendString(pattern.Describe());
--- a/tools/gn/src/gn/visibility.h
+++ b/tools/gn/src/gn/visibility.h
@@ -9,6 +9,7 @@
 #include <string_view>
 #include <vector>
 
+#include "base/values.h"
 #include "gn/label_pattern.h"
 #include "gn/source_dir.h"
 
@@ -52,7 +53,7 @@ class Visibility {
   std::string Describe(int indent, bool include_brackets) const;
 
   // Returns value representation of this visibility
-  std::unique_ptr<base::Value> AsValue() const;
+  std::unique_ptr<base::ListValue> AsValue() const;
 
   // Helper function to check visibility between the given two items. If
   // to is invisible to from, returns false and sets the error.
